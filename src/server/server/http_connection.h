// Generated by dia2code
#ifndef SERVER__HTTP_CONNECTION__H
#define SERVER__HTTP_CONNECTION__H

#include <memory>
#include <boost/beast.hpp>
#include <boost/beast/http.hpp>
#include <boost/asio.hpp>
#include <boost/asio/ip/tcp.hpp>
#include <chrono>

namespace server {
  class requestHandler;
}

#include "requestHandler.h"

namespace server {

  /// class http_connection - 
  class http_connection : public std::enable_shared_from_this<http_connection> {
    // Attributes
  public:
    boost::asio::steady_timer deadline_     = {socket_.get_executor(), std::chrono::seconds(60)};
  private:
    boost::asio::ip::tcp::socket socket_;
    boost::beast::flat_buffer buffer_;
    boost::beast::http::request<boost::beast::http::string_body> request_;
    boost::beast::http::response <boost::beast::http::dynamic_body> response_;
    // Operations
  public:
    explicit http_connection (boost::asio::ip::tcp::socket socket);
    void start ();
  private:
    void read_request ();
    void check_deadline ();
    void write_response ();
    // Setters and Getters
  };

};

#endif
