// Generated by dia2code
#ifndef SERVER__LIVEGAME__H
#define SERVER__LIVEGAME__H

#include <vector>
#include <string>

namespace state {
  class GameState;
};
namespace engine {
  class Engine;
};
namespace server {
  class Client;
  class CommandQueue;
  class LiveGame;
}

#include "Client.h"
#include "CommandQueue.h"
#include "engine/Engine.h"
#include "state/GameState.h"

namespace server {

  /// class LiveGame - 
  class LiveGame {
    // Associations
    // Attributes
  private:
    state::GameState* game;
    engine::Engine* eng;
    std::vector<Client> players;
    CommandQueue distributedCommands;
    // Operations
  public:
    std::string handlePlayerJoin (const std::string & playerName);
    static LiveGame & getInstance ();
    ~LiveGame ();
    void addCommand (const std::string & command);
    state::GameState * getState ();
    std::string retrieveCommands (const std::string & playerName);
  private:
    LiveGame ();
    // Setters and Getters
  };

};

#endif
